use djangodatabase;
DROP TABLE IF EXISTS tags;
DROP TABLE IF EXISTS phone_number;
DROP TABLE IF EXISTS booking; 
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS cart;
DROP TABLE IF EXISTS transactions;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS venue;
DROP TABLE IF EXISTS offers;
DROP TABLE IF EXISTS account_details;
DROP TABLE IF EXISTS user;
CREATE TABLE user(
    user_id INT AUTO_INCREMENT,
    profile_pic_path VARCHAR(100),
    password VARCHAR(30) not null,
    first_name VARCHAR(30),
    last_name VARCHAR(30),
    street VARCHAR(30),
    state VARCHAR(30),
    zip VARCHAR(30),
    wallet_amount DECIMAL(5,2) default 0,
    DoB DATE NOT NULL,
    email VARCHAR(30),
    about VARCHAR(30),
    PRIMARY KEY(user_id)
);


CREATE TABLE account_details(
    user_id INT,
    account_number INT,
    IFSC varchar(10),
    PRIMARY KEY (user_id, account_number),
    FOREIGN KEY (user_id) REFERENCES user(user_id)
);




create table venue(
    venue_id INT AUTO_INCREMENT,
    owner_id INT,
    venue_name VARCHAR(20),
    capacity INT,
    availability BOOL,
    street VARCHAR(20),
    state VARCHAR(20),
    zip VARCHAR(20),
    PRIMARY KEY(venue_id),
    FOREIGN KEY (owner_id) REFERENCES user(user_id)
);

 

            
create table events(
    event_id INT AUTO_INCREMENT,
    host_id INT,
    event_name VARCHAR(20),
    time_stamp DATE,
    start_time TIME,
    end_time TIME,
    venue_id INT,
    max_capacity INT,
    description VARCHAR(300),
    event_image_path VARCHAR(100),
    cost INT,
    FOREIGN KEY (host_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (venue_id) REFERENCES venue(venue_id) ON DELETE CASCADE,
    PRIMARY KEY(event_id)
);

 

CREATE TABLE booking (
    user_id INT,
    event_id INT,
    number_of_seats INT,
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events(event_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id,event_id)
);


CREATE TABLE tags(
    event_id INT,
    tag_description VARCHAR(20),
    FOREIGN KEY (event_id) REFERENCES events(event_id) ON DELETE CASCADE,
    PRIMARY KEY (event_id,tag_description)
);



CREATE TABLE reviews (
    user_id int,
    event_id int,
    review varchar(300),
    PRIMARY KEY(user_id, event_id),
    FOREIGN KEY(user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY(event_id) REFERENCES events(event_id) ON DELETE CASCADE

);

CREATE TABLE cart(
    user_id int, 
    event_id int,
    seat_count int default 0,
    PRIMARY KEY(user_id, event_id),
    FOREIGN KEY(user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY(event_id) REFERENCES events(event_id) ON DELETE CASCADE
);

CREATE TABLE transactions(
    user_id INT,
    event_id INT,
    time_of_transaction DATETIME,
    PRIMARY KEY (user_id , event_id, time_of_transaction),
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events(event_id) ON DELETE CASCADE
);  


CREATE TABLE phone_number(
    user_id INT,
    country_code VARCHAR(5),
    phone_number VARCHAR(11),
    PRIMARY KEY(user_id, country_code, phone_number)
);



CREATE TABLE offers(
    offer_id INT AUTO_INCREMENT,
    promo_code VARCHAR(10),
    discount INT,
    start_time DATETIME,
    end_time DATETIME,
    PRIMARY KEY(offer_id)
);

